@using Todo.Data.Entities
@using Todo.Services
@model Todo.Models.TodoLists.TodoListDetailViewmodel

@{
    ViewData["Title"] = $"List: {Model.Title}";
}

<script>
    function toggleCompletedItems(checkCtrl)
    {
        document.getElementById("todoListItems").querySelectorAll("li").forEach((li) => {
            li.style.display = checkCtrl.checked && li.dataset.isDone === "True" ? "None" : "";
        });
    }

    function orderByRank(sortAscending)
    {
        Array.from(document.getElementById("todoListItems").querySelectorAll("li")).sort((a, b) => {
            return sortAscending === true ? a.dataset.rank - b.dataset.rank : b.dataset.rank - a.dataset.rank;  
        }).forEach(el => el.parentNode.appendChild(el));
    }
</script>

<h2>@ViewData["Title"]</h2>

<div class="col-md-6">
    
    <div class="todo-list-actions">
        <div class="todo-list-action">
            <a asp-action="Create" asp-controller="TodoItem" asp-route-todoListId="@Model.TodoListId" class="btn btn-primary">Add New Item</a>
        </div>
        <div class="todo-list-hide-action">
            <div>
                <input class="form-check-input" type="checkbox" id="flexSwitchCheckDefault" onclick="toggleCompletedItems(this)"/>
                <label class="form-check-label" for="flexSwitchCheckDefault" title="Hide all the completed items in this list">Hide Completed Items</label>
            </div>
            <div style="text-align: right">
                <text>Order by Rank </text><a onclick="orderByRank(true)" style="cursor: pointer" title="Sort Todo items by rank Ascending">Asc</a><text>|</text><a onclick="orderByRank(false)" style="cursor: pointer" title="Sort Todo items by rank Descending">Desc</a>
            </div>
        </div>
    </div>

    <ul class="list-group" id="todoListItems">
        @foreach (var item in Model.Items.OrderBy(item => item.Importance).ThenBy(item => item.TodoItemId))
        {
            string contextualClass;
            switch (item.Importance)
            {
                case Importance.High:
                    contextualClass = "list-group-item-danger";
                    break;
                case Importance.Low:
                    contextualClass = "list-group-item-info";
                    break;
                default:
                    contextualClass = "";
                    break;
            }
            
            string itemDescription = $"{item.Title} (Rank {item.Rank})";

            <li id="@item.TodoItemId" data-is-done="@item.IsDone" data-rank="@item.Rank" class="list-group-item todo-list-item @contextualClass">

                <div class="row">
                    <div class="col-md-8">
                        <a asp-action="Edit" asp-controller="TodoItem" asp-route-todoItemId="@item.TodoItemId">

                            @if (item.IsDone)
                            {
                                <s>@itemDescription</s>
                            }
                            else
                            {
                                <text>@itemDescription</text>
                            }
                        </a>
                    </div>
                    
                    <div class="col-md-4 text-right">
                        <small>
                            @item.ResponsibleParty.UserName

                            <img src="https://www.gravatar.com/avatar/@Gravatar.GetHash(item.ResponsibleParty.Email)?s=30"/>

                        </small>
                    </div>
                </div>
            </li>
        }
    </ul>
    
    @Html.ActionLink("Go back to your TODO Lists", "Index")
</div>